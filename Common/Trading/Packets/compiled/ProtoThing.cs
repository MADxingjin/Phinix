// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: Packets/ProtoThing.proto
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace Trading {

  /// <summary>Holder for reflection information generated from Packets/ProtoThing.proto</summary>
  public static partial class ProtoThingReflection {

    #region Descriptor
    /// <summary>File descriptor for Packets/ProtoThing.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static ProtoThingReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "ChhQYWNrZXRzL1Byb3RvVGhpbmcucHJvdG8SB1RyYWRpbmcaFVBhY2tldHMv",
            "UXVhbGl0eS5wcm90byK+AQoKUHJvdG9UaGluZxIPCgdEZWZOYW1lGAEgASgJ",
            "EhIKClN0YWNrQ291bnQYAiABKAUSFAoMU3R1ZmZEZWZOYW1lGAMgASgJEiEK",
            "B1F1YWxpdHkYBCABKA4yEC5UcmFkaW5nLlF1YWxpdHkSEQoJSGl0UG9pbnRz",
            "GAUgASgFEhEKCUNvbXBQcm9wcxgHIAMoDBIsCg9Jbm5lclByb3RvVGhpbmcY",
            "BiABKAsyEy5UcmFkaW5nLlByb3RvVGhpbmdiBnByb3RvMw=="));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { global::Trading.QualityReflection.Descriptor, },
          new pbr::GeneratedClrTypeInfo(null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::Trading.ProtoThing), global::Trading.ProtoThing.Parser, new[]{ "DefName", "StackCount", "StuffDefName", "Quality", "HitPoints", "CompProps", "InnerProtoThing" }, null, null, null)
          }));
    }
    #endregion

  }
  #region Messages
  public sealed partial class ProtoThing : pb::IMessage<ProtoThing> {
    private static readonly pb::MessageParser<ProtoThing> _parser = new pb::MessageParser<ProtoThing>(() => new ProtoThing());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ProtoThing> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Trading.ProtoThingReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ProtoThing() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ProtoThing(ProtoThing other) : this() {
      defName_ = other.defName_;
      stackCount_ = other.stackCount_;
      stuffDefName_ = other.stuffDefName_;
      quality_ = other.quality_;
      hitPoints_ = other.hitPoints_;
      compProps_ = other.compProps_.Clone();
      InnerProtoThing = other.innerProtoThing_ != null ? other.InnerProtoThing.Clone() : null;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ProtoThing Clone() {
      return new ProtoThing(this);
    }

    /// <summary>Field number for the "DefName" field.</summary>
    public const int DefNameFieldNumber = 1;
    private string defName_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string DefName {
      get { return defName_; }
      set {
        defName_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "StackCount" field.</summary>
    public const int StackCountFieldNumber = 2;
    private int stackCount_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int StackCount {
      get { return stackCount_; }
      set {
        stackCount_ = value;
      }
    }

    /// <summary>Field number for the "StuffDefName" field.</summary>
    public const int StuffDefNameFieldNumber = 3;
    private string stuffDefName_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string StuffDefName {
      get { return stuffDefName_; }
      set {
        stuffDefName_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "Quality" field.</summary>
    public const int QualityFieldNumber = 4;
    private global::Trading.Quality quality_ = 0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Trading.Quality Quality {
      get { return quality_; }
      set {
        quality_ = value;
      }
    }

    /// <summary>Field number for the "HitPoints" field.</summary>
    public const int HitPointsFieldNumber = 5;
    private int hitPoints_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int HitPoints {
      get { return hitPoints_; }
      set {
        hitPoints_ = value;
      }
    }

    /// <summary>Field number for the "CompProps" field.</summary>
    public const int CompPropsFieldNumber = 7;
    private static readonly pb::FieldCodec<pb::ByteString> _repeated_compProps_codec
        = pb::FieldCodec.ForBytes(58);
    private readonly pbc::RepeatedField<pb::ByteString> compProps_ = new pbc::RepeatedField<pb::ByteString>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<pb::ByteString> CompProps {
      get { return compProps_; }
    }

    /// <summary>Field number for the "InnerProtoThing" field.</summary>
    public const int InnerProtoThingFieldNumber = 6;
    private global::Trading.ProtoThing innerProtoThing_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Trading.ProtoThing InnerProtoThing {
      get { return innerProtoThing_; }
      set {
        innerProtoThing_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ProtoThing);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ProtoThing other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (DefName != other.DefName) return false;
      if (StackCount != other.StackCount) return false;
      if (StuffDefName != other.StuffDefName) return false;
      if (Quality != other.Quality) return false;
      if (HitPoints != other.HitPoints) return false;
      if(!compProps_.Equals(other.compProps_)) return false;
      if (!object.Equals(InnerProtoThing, other.InnerProtoThing)) return false;
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (DefName.Length != 0) hash ^= DefName.GetHashCode();
      if (StackCount != 0) hash ^= StackCount.GetHashCode();
      if (StuffDefName.Length != 0) hash ^= StuffDefName.GetHashCode();
      if (Quality != 0) hash ^= Quality.GetHashCode();
      if (HitPoints != 0) hash ^= HitPoints.GetHashCode();
      hash ^= compProps_.GetHashCode();
      if (innerProtoThing_ != null) hash ^= InnerProtoThing.GetHashCode();
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (DefName.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(DefName);
      }
      if (StackCount != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(StackCount);
      }
      if (StuffDefName.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(StuffDefName);
      }
      if (Quality != 0) {
        output.WriteRawTag(32);
        output.WriteEnum((int) Quality);
      }
      if (HitPoints != 0) {
        output.WriteRawTag(40);
        output.WriteInt32(HitPoints);
      }
      if (innerProtoThing_ != null) {
        output.WriteRawTag(50);
        output.WriteMessage(InnerProtoThing);
      }
      compProps_.WriteTo(output, _repeated_compProps_codec);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (DefName.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(DefName);
      }
      if (StackCount != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(StackCount);
      }
      if (StuffDefName.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(StuffDefName);
      }
      if (Quality != 0) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) Quality);
      }
      if (HitPoints != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(HitPoints);
      }
      size += compProps_.CalculateSize(_repeated_compProps_codec);
      if (innerProtoThing_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(InnerProtoThing);
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ProtoThing other) {
      if (other == null) {
        return;
      }
      if (other.DefName.Length != 0) {
        DefName = other.DefName;
      }
      if (other.StackCount != 0) {
        StackCount = other.StackCount;
      }
      if (other.StuffDefName.Length != 0) {
        StuffDefName = other.StuffDefName;
      }
      if (other.Quality != 0) {
        Quality = other.Quality;
      }
      if (other.HitPoints != 0) {
        HitPoints = other.HitPoints;
      }
      compProps_.Add(other.compProps_);
      if (other.innerProtoThing_ != null) {
        if (innerProtoThing_ == null) {
          innerProtoThing_ = new global::Trading.ProtoThing();
        }
        InnerProtoThing.MergeFrom(other.InnerProtoThing);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 10: {
            DefName = input.ReadString();
            break;
          }
          case 16: {
            StackCount = input.ReadInt32();
            break;
          }
          case 26: {
            StuffDefName = input.ReadString();
            break;
          }
          case 32: {
            quality_ = (global::Trading.Quality) input.ReadEnum();
            break;
          }
          case 40: {
            HitPoints = input.ReadInt32();
            break;
          }
          case 50: {
            if (innerProtoThing_ == null) {
              innerProtoThing_ = new global::Trading.ProtoThing();
            }
            input.ReadMessage(innerProtoThing_);
            break;
          }
          case 58: {
            compProps_.AddEntriesFrom(input, _repeated_compProps_codec);
            break;
          }
        }
      }
    }

  }

  #endregion

}

#endregion Designer generated code
