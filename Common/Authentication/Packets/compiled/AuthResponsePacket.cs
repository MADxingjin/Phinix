// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: Packets/AuthResponsePacket.proto
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace Authentication {

  /// <summary>Holder for reflection information generated from Packets/AuthResponsePacket.proto</summary>
  public static partial class AuthResponsePacketReflection {

    #region Descriptor
    /// <summary>File descriptor for Packets/AuthResponsePacket.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static AuthResponsePacketReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "CiBQYWNrZXRzL0F1dGhSZXNwb25zZVBhY2tldC5wcm90bxIOQXV0aGVudGlj",
            "YXRpb24aG1BhY2tldHMvRmFpbHVyZVJlYXNvbi5wcm90byKGAQoSQXV0aFJl",
            "c3BvbnNlUGFja2V0Eg8KB1N1Y2Nlc3MYASABKAgSNAoNRmFpbHVyZVJlYXNv",
            "bhgCIAEoDjIdLkF1dGhlbnRpY2F0aW9uLkZhaWx1cmVSZWFzb24SFgoORmFp",
            "bHVyZU1lc3NhZ2UYAyABKAkSEQoJU2Vzc2lvbklkGAQgASgJYgZwcm90bzM="));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { global::Authentication.FailureReasonReflection.Descriptor, },
          new pbr::GeneratedClrTypeInfo(null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::Authentication.AuthResponsePacket), global::Authentication.AuthResponsePacket.Parser, new[]{ "Success", "FailureReason", "FailureMessage", "SessionId" }, null, null, null)
          }));
    }
    #endregion

  }
  #region Messages
  public sealed partial class AuthResponsePacket : pb::IMessage<AuthResponsePacket> {
    private static readonly pb::MessageParser<AuthResponsePacket> _parser = new pb::MessageParser<AuthResponsePacket>(() => new AuthResponsePacket());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<AuthResponsePacket> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Authentication.AuthResponsePacketReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public AuthResponsePacket() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public AuthResponsePacket(AuthResponsePacket other) : this() {
      success_ = other.success_;
      failureReason_ = other.failureReason_;
      failureMessage_ = other.failureMessage_;
      sessionId_ = other.sessionId_;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public AuthResponsePacket Clone() {
      return new AuthResponsePacket(this);
    }

    /// <summary>Field number for the "Success" field.</summary>
    public const int SuccessFieldNumber = 1;
    private bool success_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Success {
      get { return success_; }
      set {
        success_ = value;
      }
    }

    /// <summary>Field number for the "FailureReason" field.</summary>
    public const int FailureReasonFieldNumber = 2;
    private global::Authentication.FailureReason failureReason_ = 0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Authentication.FailureReason FailureReason {
      get { return failureReason_; }
      set {
        failureReason_ = value;
      }
    }

    /// <summary>Field number for the "FailureMessage" field.</summary>
    public const int FailureMessageFieldNumber = 3;
    private string failureMessage_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string FailureMessage {
      get { return failureMessage_; }
      set {
        failureMessage_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "SessionId" field.</summary>
    public const int SessionIdFieldNumber = 4;
    private string sessionId_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string SessionId {
      get { return sessionId_; }
      set {
        sessionId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as AuthResponsePacket);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(AuthResponsePacket other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Success != other.Success) return false;
      if (FailureReason != other.FailureReason) return false;
      if (FailureMessage != other.FailureMessage) return false;
      if (SessionId != other.SessionId) return false;
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Success != false) hash ^= Success.GetHashCode();
      if (FailureReason != 0) hash ^= FailureReason.GetHashCode();
      if (FailureMessage.Length != 0) hash ^= FailureMessage.GetHashCode();
      if (SessionId.Length != 0) hash ^= SessionId.GetHashCode();
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Success != false) {
        output.WriteRawTag(8);
        output.WriteBool(Success);
      }
      if (FailureReason != 0) {
        output.WriteRawTag(16);
        output.WriteEnum((int) FailureReason);
      }
      if (FailureMessage.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(FailureMessage);
      }
      if (SessionId.Length != 0) {
        output.WriteRawTag(34);
        output.WriteString(SessionId);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Success != false) {
        size += 1 + 1;
      }
      if (FailureReason != 0) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) FailureReason);
      }
      if (FailureMessage.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(FailureMessage);
      }
      if (SessionId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(SessionId);
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(AuthResponsePacket other) {
      if (other == null) {
        return;
      }
      if (other.Success != false) {
        Success = other.Success;
      }
      if (other.FailureReason != 0) {
        FailureReason = other.FailureReason;
      }
      if (other.FailureMessage.Length != 0) {
        FailureMessage = other.FailureMessage;
      }
      if (other.SessionId.Length != 0) {
        SessionId = other.SessionId;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 8: {
            Success = input.ReadBool();
            break;
          }
          case 16: {
            failureReason_ = (global::Authentication.FailureReason) input.ReadEnum();
            break;
          }
          case 26: {
            FailureMessage = input.ReadString();
            break;
          }
          case 34: {
            SessionId = input.ReadString();
            break;
          }
        }
      }
    }

  }

  #endregion

}

#endregion Designer generated code
